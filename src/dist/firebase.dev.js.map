{"version":3,"sources":["firebase.js"],"names":["firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","app","auth","storage","db","useAuth","currentUser","setCurrentUser","unsub","user"],"mappings":";;;;;;;;AACA;;AACA;;AACA;;AACA;;AAEA;;;;;;;;;;AACA;AACA;AAEA;AACA;AACA,IAAMA,cAAc,GAAG;AACrBC,EAAAA,MAAM,EAAE,yCADa;AAErBC,EAAAA,UAAU,EAAE,6BAFS;AAGrBC,EAAAA,SAAS,EAAE,aAHU;AAIrBC,EAAAA,aAAa,EAAE,yBAJM;AAKrBC,EAAAA,iBAAiB,EAAE,cALE;AAMrBC,EAAAA,KAAK,EAAE;AANc,CAAvB,C,CAUA;;AACA,IAAMC,GAAG,GAAG,wBAAcP,cAAd,CAAZ;AACA,IAAMQ,IAAI,GAAG,oBAAb;;AACA,IAAMC,OAAO,GAAG,yBAAWF,GAAX,CAAhB;;AACA,IAAMG,EAAE,GAAG,6BAAaH,GAAb,CAAX,C,CAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AACO,SAASI,OAAT,GAAmB;AAAA,kBACc,sBADd;AAAA;AAAA,MACjBC,WADiB;AAAA,MACJC,cADI;;AAExB,wBAAU,YAAM;AACd,QAAMC,KAAK,GAAG,8BAAmBN,IAAnB,EAAwB,UAAAO,IAAI;AAAA,aAAIF,cAAc,CAACE,IAAD,CAAlB;AAAA,KAA5B,CAAd;AACA,WAAOD,KAAP;AACD,GAHD,EAGG,EAHH;AAIA,SAAOF,WAAP;AACD","sourcesContent":["// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { createUserWithEmailAndPassword, getAuth, onAuthStateChanged } from \"firebase/auth\"\r\nimport { getStorage } from \"firebase/storage\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\nimport { addDoc, collection } from \"firebase/firestore\"; // Import addDoc and collection\r\nimport { useEffect, useState } from \"react\";\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBJ0R15ggpAOPPNYXOIxJMeXzJxmwqx2Qc\",\r\n  authDomain: \"final-colab.firebaseapp.com\",\r\n  projectId: \"final-colab\",\r\n  storageBucket: \"final-colab.appspot.com\",\r\n  messagingSenderId: \"474778904282\",\r\n  appId: \"1:474778904282:web:4e6913ee24a5b7f214a7e3\"\r\n};\r\n\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\nconst auth = getAuth();\r\nconst storage = getStorage(app);\r\nconst db = getFirestore(app);\r\n\r\n// export async function signup(email, password,firstName, lastName, gender, role) {\r\n//   const auth = getAuth(); // Get the auth instance\r\n\r\n//   try {\r\n//     // Create the user with email and password\r\n//     const userCredential = await createUserWithEmailAndPassword(auth, email, password);\r\n\r\n//     // Extract the user's UID\r\n//     const uid = userCredential.user.uid;\r\n\r\n//     // Add a new document with user information to the \"users\" collection\r\n//     const usersCollection = collection(db, \"users\"); // Assuming \"db\" is your Firestore instance\r\n//     await addDoc(usersCollection, {\r\n//       uid,\r\n//       firstName,\r\n//       lastName,\r\n//       gender,\r\n//       role,\r\n//     });\r\n\r\n//     // Return the user\r\n//     return userCredential.user;\r\n//   } catch (error) {\r\n//     // Handle any errors here\r\n//     throw error;\r\n//   }\r\n// }\r\nexport function useAuth() {\r\n  const [currentUser, setCurrentUser] = useState();\r\n  useEffect(() => {\r\n    const unsub = onAuthStateChanged(auth,user => setCurrentUser(user) )\r\n    return unsub;\r\n  }, [])\r\n  return currentUser;\r\n}\r\nexport { storage, auth,db }\r\n"],"file":"firebase.dev.js"}